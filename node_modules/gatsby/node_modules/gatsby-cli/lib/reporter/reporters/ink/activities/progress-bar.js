"use strict";

exports.__esModule = true;
exports.default = void 0;

var _util = require("./util");

var _default = reporter => (name, options) => {
  const isFinished = activity => activity.total - activity.current <= 1;

  const getActivity = state => state.activities[name];
  /**
   * Helper function to set state, removes some boilerplate
   */


  const setState = (oldState, newState) => {
    return {
      activities: { ...oldState.activities,
        [name]: newState
      }
    };
  };

  const completeProgress = state => {
    const activity = getActivity(state);
    reporter.success(`${name} â€” ${activity.current}/${activity.total} - ${(0, _util.calcElapsedTime)(activity.startTime)} s`);
    reporter.setState(state => {
      const activities = { ...state.activities
      };
      delete activities[name];
      return {
        activities
      };
    });
  };

  return {
    start: () => {
      reporter.setState(state => setState(state, {
        type: `progress`,
        current: options.start || 0,
        total: options.total || 0,
        startTime: process.hrtime()
      }));
    },
    tick: () => {
      const activity = getActivity(reporter.state);

      if (!activity) {
        // activity already stopped
        return;
      }

      if (isFinished(activity)) {
        completeProgress(reporter.state);
        return;
      }

      reporter.setState(state => setState(state, { ...getActivity(state),
        current: getActivity(state).current + 1
      }));
    },

    get total() {
      const activity = getActivity(reporter.state);
      return activity ? activity.total : options.total;
    },

    /**
     * You can override the total, we have to set the state to let ink know it updated
     */
    set total(value) {
      reporter.setState(state => {
        const activity = getActivity(state);

        if (!activity) {
          options.total = value;
          return state;
        }

        return setState(state, { ...activity,
          total: value
        });
      });
    }

  };
};

exports.default = _default;